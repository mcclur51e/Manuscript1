############ multiplot ############
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
  library(grid)

  # Make a list from the ... arguments and plotlist
  plots <- c(list(...), plotlist)

  numPlots = length(plots)

  # If layout is NULL, then use 'cols' to determine layout
  if (is.null(layout)) {
    # Make the panel
    # ncol: Number of columns of plots
    # nrow: Number of rows needed, calculated from # of cols
    layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
                    ncol = cols, nrow = ceiling(numPlots/cols))
  }

 if (numPlots==1) {
    print(plots[[1]])

  } else {
    # Set up the page
    grid.newpage()
    pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))

    # Make each plot, in the correct location
    for (i in 1:numPlots) {
      # Get the i,j matrix positions of the regions that contain this subplot
      matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))

      print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
                                      layout.pos.col = matchidx$col))
    }
  }
}
################

library("phyloseq") #packageVersion("phyloseq")
library("ggplot2") #packageVersion("ggplot2")
library("ape") #packageVersion("ape")
setwd("~/Desktop/2017_0322/")

taxdata <- read.csv("table_tax.csv", header = TRUE, row.names = 1) # reads csv file into data.frame with row names in column 1
taxmat <- as.matrix.data.frame(taxdata) # reads data.frame into matrix without converting to numbers
otudata <- read.csv("table_otu.csv", header = TRUE, row.names = 1)
otumat <- as.matrix.data.frame(otudata)
mapdata <- read.csv("table_map.csv", header = TRUE, row.names = 1)
# mapmat <- as.matrix.data.frame(mapdata)
OTU = otu_table(otumat, taxa_are_rows = TRUE)
TAX = tax_table(taxmat)
MAP = sample_data(data.frame(mapdata)) #######
TREE = read.tree("Rep_Set_tree.tree")
physeq = phyloseq(OTU, TAX, MAP, TREE)

theme_set(theme_bw())
pal = "Set3"
scale_colour_discrete <-  function(palname=pal, ...){
  scale_colour_brewer(palette=palname, ...)
}
scale_fill_discrete <-  function(palname=pal, ...){
  scale_fill_brewer(palette=palname, ...)
}

physeqR <- physeq # Save original version of un-manipulated data
physeq <- prune_samples(sample_sums(physeq) > 5000, physeq) # keep only samples with >5000 reads

physeqH <- physeq # Save version of data with Halomonas included
halo <- subset_taxa(physeq, Family == "Halomonadaceae") # create list of Halomonadaceae in samples
physeq = prune_samples(sample_sums(halo)<=50, physeq) # Remove any samples with >= .5% Halomonadaceae (50/10000)

ILF <- subset_samples(physeq, SampleSite%in%c("ILF","Albumen")) # Only look at ILF and albumen samples
clean2 <- subset_samples(ILF, !MealLot1%in%c("S-N3095","15B52072")) # Remove samples from contaminated blood lots
clean <- subset_samples(clean2, !MealLot2%in%c("S-N3095","15B52072")) # Remove samples from contaminated blood lots
young <- subset_samples(clean, !Age%in%c("A"))
old <- subset_samples(clean, Age%in%c("A")) 
o.con <- subset_samples(old, !Treatment%in%c("AnaFeed","MacroAdults"))
y.con <- subset_samples(young, Treatment%in%c("Control","Cocoon","2Feeds","1Feed")) 
one <- subset_samples(y.con, !RunDate%in%c("2016_0316")) # remove 2016_0316 data ('weird' cocoon albumen samples)
control <- merge_phyloseq(o.con, one) # Implemented 12/4/16. Adults seem ~unaffected by juvenile interaction
adult <- subset_samples(control, Age%in%c("A")) 
juv <- subset_samples(control, Age%in%c("J"))
hatch <- subset_samples(control, Age%in%c("H"))
coc <- subset_samples(control, Age%in%c("C"))

most_abundant_taxaC <- sort(taxa_sums(coc), TRUE)[1:25] # Identify 25 most abundant taxa
most_abundant_taxaA <- sort(taxa_sums(adult), TRUE)[1:25] # Identify 25 most abundant taxa
most_abundant_taxaJ <- sort(taxa_sums(juv), TRUE)[1:25] # Identify 25 most abundant taxa
most_abundant_taxaH <- sort(taxa_sums(hatch), TRUE)[1:25] # Identify 25 most abundant taxa
clip <- c(most_abundant_taxaC,most_abundant_taxaA,most_abundant_taxaJ,most_abundant_taxaH) # combine most abundant taxa in cocoons and overall data set
pruned <- prune_taxa(names(clip),control) # Create a subset of data including only most abundant taxa
pruneC <- prune_taxa(names(clip),coc) # Create a subset of data including only most abundant taxa
pruneA <- prune_taxa(names(clip),adult) # Create a subset of data including only most abundant taxa
pruneJ <- prune_taxa(names(clip),juv) # Create a subset of data including only most abundant taxa
pruneH <- prune_taxa(names(clip),hatch) # Create a subset of data including only most abundant taxa

family <- tax_glom(pruned, taxrank = "Family") # Combine OTUs at family level
familyC <- tax_glom(pruneC, taxrank = "Family") # Combine OTUs at family level
familyA <- tax_glom(pruneA, taxrank = "Family") # Combine OTUs at family level
familyJ <- tax_glom(pruneJ, taxrank = "Family") # Combine OTUs at family level
familyH <- tax_glom(pruneH, taxrank = "Family") # Combine OTUs at family level

transform <- transform_sample_counts(family, function(OTU) OTU/sum(OTU) )
transformC <- transform_sample_counts(familyC, function(OTU) OTU/sum(OTU) )
transformA <- transform_sample_counts(familyA, function(OTU) OTU/sum(OTU) )
transformJ <- transform_sample_counts(familyJ, function(OTU) OTU/sum(OTU) )
transformH <- transform_sample_counts(familyH, function(OTU) OTU/sum(OTU) )

plot_bar(transform, fill="Family")

########## Germany Image ##########
most_abundant_taxaAa <- sort(taxa_sums(adult), TRUE)[1:25] # Identify 25 most abundant taxa
pruneAa <- prune_taxa(names(most_abundant_taxaAa),adult) # Create a subset of data including only most abundant taxa
familyAa <- tax_glom(pruneAa, taxrank = "Family") # Combine OTUs at family level
transformAa <- transform_sample_counts(familyAa, function(OTU) OTU/sum(OTU) )
a <- plot_bar(transformAa, x="Number", fill="Order", facet_grid=Source~.) + expand_limits(y=c(0,1)) + labs(title = "Adults")+ theme(text=element_text(size=rel(3)), axis.text.x=element_blank(),axis.title.x=element_blank(),legend.text=element_text(size=rel(3)),legend.title=element_blank(),plot.title=element_text(size = rel(3)))

most_abundant_taxaCa <- sort(taxa_sums(coc), TRUE)[1:25] # Identify 25 most abundant taxa
pruneCa <- prune_taxa(names(most_abundant_taxaCa),coc) # Create a subset of data including only most abundant taxa
familyCa <- tax_glom(pruneCa, taxrank = "Family") # Combine OTUs at family level
transformCa <- transform_sample_counts(familyCa, function(OTU) OTU/sum(OTU) )
c <- plot_bar(transformCa, x="Number", fill="Order", facet_grid=Source~.) + expand_limits(y=c(0,1)) + labs(title = "Cocoons")+ theme(text=element_text(size=rel(3)), axis.text.x=element_blank(),axis.title.x=element_blank(),legend.text=element_text(size=rel(3)),legend.title=element_blank(),plot.title=element_text(size = rel(3)))

most_abundant_taxaHa <- sort(taxa_sums(hatch), TRUE)[1:25] # Identify 25 most abundant taxa
pruneHa <- prune_taxa(names(most_abundant_taxaHa),hatch) # Create a subset of data including only most abundant taxa
familyHa <- tax_glom(pruneHa, taxrank = "Family") # Combine OTUs at family level
transformHa <- transform_sample_counts(familyHa, function(OTU) OTU/sum(OTU) )
h <- plot_bar(transformHa, x="Number", fill="Order", facet_grid=Source~.) + expand_limits(y=c(0,1)) + labs(title = "Hatchlings")+ theme(text=element_text(size=rel(3)), axis.text.x=element_blank(),axis.title.x=element_blank(),legend.text=element_text(size=rel(3)),legend.title=element_blank(),plot.title=element_text(size = rel(3)))

most_abundant_taxaJa <- sort(taxa_sums(juv), TRUE)[1:25] # Identify 25 most abundant taxa
pruneJa <- prune_taxa(names(most_abundant_taxaJa),juv) # Create a subset of data including only most abundant taxa
familyJa <- tax_glom(pruneJa, taxrank = "Family") # Combine OTUs at family level
transformJa <- transform_sample_counts(familyJa, function(OTU) OTU/sum(OTU) )
j <- plot_bar(transformJa, x="Number", fill="Order", facet_grid=Source~.) + expand_limits(y=c(0,1)) + labs(title = "Juveniles")+ theme(text=element_text(size=rel(3)), axis.text.x=element_blank(),axis.title.x=element_blank(),legend.text=element_text(size=rel(3)),legend.title=element_blank(),plot.title=element_text(size = rel(3)))

pdf(file = "germany.pdf", width = 8, height = 12 )
multiplot(a,c,h,j) # define 'multiplot' before starting (see end of notes)
dev.off()
########## Germany Image ##########

physeq5 <- prune_samples(sample_sums(physeqR)>5000,physeqR)
ILF <- subset_samples(physeq5, SampleSite%in%c("ILF")) 
ILFj <- subset_samples(ILF, Age%in%c("J"))
ILFnew <- subset_samples(ILFj, Treatment%in%c("1Feed","2Feeds","Control"))
most_abundant_taxaI <- sort(taxa_sums(ILFnew), TRUE)[1:25] # Identify 25 most abundant taxa
pruneI <- prune_taxa(names(most_abundant_taxaI),ILFnew) 
familyI <- tax_glom(pruneI, taxrank = "Family") # Combine OTUs at family level
transformI <- transform_sample_counts(familyI, function(OTU) OTU/sum(OTU) )
plot_bar(transformI, fill="Family")
plot_bar(transformI, x="DateDNAExtract",fill="Family") 
### Halomonadaceae (Oceanospirillales) is high. Is this due to extraction reagents, sequencing reagents, hatch date, source, or can it be real? ###
plot_bar(transformI,fill="Order",facet_grid=DateDNAExtract~.) # 2014_0728, also Unk and "" have high Oceanospirillales  # 2014_0718 is almost 100% Burkholderiales 
plot_bar(transformI,fill="Order",facet_grid=DateHatch~.) # 2014_0206-12 has high Oceanospirillales
plot_bar(transformI,fill="Order",facet_grid=RunDate~.) # Oceanospirillales seem to be randomly distributed among runs
plot_bar(transformI,fill="Order",facet_grid=Cocoon~.) # UConn092513NOPQRSTUVWXYZabc had high Oceanospirillales
plot_bar(transformI,fill="Order",facet_grid=ParentLot~.) # USA092513F has high while BBEZ_unk has low Oceanospirillales
plot_bar(transformI,fill="Order",facet_grid=Source~.) # Oceanospirillales higher in BBEZ juveniles but also present in half of UConn
plot_bar(transformI,fill="Order",facet_grid=DateSacrifice~.) # Animals sacrificed 6/14-8/14 contain Oceanospirillales
plot_bar(transformI,fill="Order",facet_grid=MealLot1~.) # 14M52153 and S-P4655 have high Oceanospirillales
plot_bar(transformI,fill="Order",facet_grid=MealLot2~.) # 2nd feeding increase Burkholderiales but minimally affects Oceanospirillales
plot_bar(transformI,fill="Order",facet_grid=Da1F~.) # Oceanospirillales increases at 7DaF, 7Da2F, and juveniles that refused to feed
### j2d2F020715 contaminated with Pseudomonas ###

### Need to follow up once including fast_melt() to assess Halomonas vs ReadsCount ###
